// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common/v1/coin.proto

// Package common defines commonly used types agnostic to the node role on the Sonr network.

package common

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CoinType int32

const (
	CoinType_CoinType_BITCOIN  CoinType = 0
	CoinType_CoinType_TESTNET  CoinType = 1
	CoinType_CoinType_LITECOIN CoinType = 2
	CoinType_CoinType_DOGE     CoinType = 3
	CoinType_CoinType_ETHEREUM CoinType = 60
	CoinType_CoinType_SONR     CoinType = 703
)

var CoinType_name = map[int32]string{
	0:   "CoinType_BITCOIN",
	1:   "CoinType_TESTNET",
	2:   "CoinType_LITECOIN",
	3:   "CoinType_DOGE",
	60:  "CoinType_ETHEREUM",
	703: "CoinType_SONR",
}

var CoinType_value = map[string]int32{
	"CoinType_BITCOIN":  0,
	"CoinType_TESTNET":  1,
	"CoinType_LITECOIN": 2,
	"CoinType_DOGE":     3,
	"CoinType_ETHEREUM": 60,
	"CoinType_SONR":     703,
}

func (x CoinType) String() string {
	return proto.EnumName(CoinType_name, int32(x))
}

func (CoinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e79743861c128809, []int{0}
}

func init() {
	proto.RegisterEnum("sonrhq.common.v1.CoinType", CoinType_name, CoinType_value)
}

func init() { proto.RegisterFile("common/v1/coin.proto", fileDescriptor_e79743861c128809) }

var fileDescriptor_e79743861c128809 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0x33, 0xd4, 0x4f, 0xce, 0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x12, 0x28, 0xce, 0xcf, 0x2b, 0xca, 0x28, 0xd4, 0x83, 0x48, 0xea, 0x95, 0x19, 0x6a, 0x75,
	0x33, 0x72, 0x71, 0x38, 0xe7, 0x67, 0xe6, 0x85, 0x54, 0x16, 0xa4, 0x0a, 0x89, 0x70, 0x09, 0xc0,
	0xd8, 0xf1, 0x4e, 0x9e, 0x21, 0xce, 0xfe, 0x9e, 0x7e, 0x02, 0x0c, 0x28, 0xa2, 0x21, 0xae, 0xc1,
	0x21, 0x7e, 0xae, 0x21, 0x02, 0x8c, 0x42, 0xa2, 0x5c, 0x82, 0x70, 0x51, 0x1f, 0xcf, 0x10, 0x57,
	0xb0, 0x62, 0x26, 0x21, 0x41, 0x2e, 0x5e, 0xb8, 0xb0, 0x8b, 0xbf, 0xbb, 0xab, 0x00, 0x33, 0x8a,
	0x4a, 0xd7, 0x10, 0x0f, 0xd7, 0x20, 0xd7, 0x50, 0x5f, 0x01, 0x1b, 0x21, 0x21, 0x24, 0x95, 0xc1,
	0xfe, 0x7e, 0x41, 0x02, 0xfb, 0x59, 0x9d, 0xac, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e,
	0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58,
	0x8e, 0x21, 0x4a, 0x31, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x09, 0xe4, 0x72, 0x7d, 0x88, 0x27, 0xf4,
	0x93, 0xf3, 0x8b, 0x52, 0xf5, 0x0b, 0xb2, 0xd3, 0xf5, 0x21, 0xbe, 0x49, 0x62, 0x03, 0xfb, 0xd1,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x39, 0x87, 0x08, 0x08, 0xfb, 0x00, 0x00, 0x00,
}
