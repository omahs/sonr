// @generated by protoc-gen-connect-web v0.8.3
// @generated from file sonr/vault/v1/accounts.proto (package sonrhq.sonr.vault.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

// Package Motor is used for defining a Motor node and its properties.

import { CreateAccountRequest, CreateAccountResponse, DeleteAccountRequest, DeleteAccountResponse, GetAccountRequest, GetAccountResponse, ListAccountsRequest, ListAccountsResponse } from "./accounts_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Vault is the service used for managing a node's keypair.
 *
 * @generated from service sonrhq.sonr.vault.v1.VaultAccounts
 */
export declare const VaultAccounts: {
  readonly typeName: "sonrhq.sonr.vault.v1.VaultAccounts",
  readonly methods: {
    /**
     * Create a new account
     *
     * {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
     * It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
     *
     * #### {{.RequestType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .RequestType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     *
     * #### {{.ResponseType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     * @generated from rpc sonrhq.sonr.vault.v1.VaultAccounts.CreateAccount
     */
    readonly createAccount: {
      readonly name: "CreateAccount",
      readonly I: typeof CreateAccountRequest,
      readonly O: typeof CreateAccountResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List the accounts
     *
     * {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
     * It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
     *
     * #### {{.RequestType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .RequestType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     *
     * #### {{.ResponseType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     * @generated from rpc sonrhq.sonr.vault.v1.VaultAccounts.ListAccounts
     */
    readonly listAccounts: {
      readonly name: "ListAccounts",
      readonly I: typeof ListAccountsRequest,
      readonly O: typeof ListAccountsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get Account
     *
     * {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
     * It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
     *
     * #### {{.RequestType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .RequestType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     *
     * #### {{.ResponseType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     * @generated from rpc sonrhq.sonr.vault.v1.VaultAccounts.GetAccount
     */
    readonly getAccount: {
      readonly name: "GetAccount",
      readonly I: typeof GetAccountRequest,
      readonly O: typeof GetAccountResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete Account
     *
     * {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
     * It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
     *
     * #### {{.RequestType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .RequestType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     *
     * #### {{.ResponseType.Name}}
     * | Name | Type | Description |
     * | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
     * | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
     *
     * @generated from rpc sonrhq.sonr.vault.v1.VaultAccounts.DeleteAccount
     */
    readonly deleteAccount: {
      readonly name: "DeleteAccount",
      readonly I: typeof DeleteAccountRequest,
      readonly O: typeof DeleteAccountResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

