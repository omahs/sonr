// @generated by protoc-gen-es v1.1.0
// @generated from file sonr/vault/v1/accounts.proto (package sonrhq.sonr.vault.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

// Package Motor is used for defining a Motor node and its properties.

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DidDocument } from "../../../core/identity/did_pb.js";
import type { AccountInfo } from "../../common/info_pb.js";

/**
 * CreateAccountRequest is the request to create an account.
 *
 * @generated from message sonrhq.sonr.vault.v1.CreateAccountRequest
 */
export declare class CreateAccountRequest extends Message<CreateAccountRequest> {
  /**
   * @generated from field: string sonr_id = 1;
   */
  sonrId: string;

  /**
   * @generated from field: string coin_type = 2;
   */
  coinType: string;

  constructor(data?: PartialMessage<CreateAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.CreateAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static equals(a: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined, b: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined): boolean;
}

/**
 * CreateAccountResponse is the response to a CreateAccount request.
 *
 * @generated from message sonrhq.sonr.vault.v1.CreateAccountResponse
 */
export declare class CreateAccountResponse extends Message<CreateAccountResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string coin_type = 2;
   */
  coinType: string;

  /**
   * @generated from field: sonrhq.core.identity.DidDocument did_document = 3;
   */
  didDocument?: DidDocument;

  /**
   * @generated from field: repeated sonrhq.sonr.common.AccountInfo accounts = 4;
   */
  accounts: AccountInfo[];

  constructor(data?: PartialMessage<CreateAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.CreateAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static equals(a: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined, b: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined): boolean;
}

/**
 * GetAccountRequest is the request to get an account.
 *
 * @generated from message sonrhq.sonr.vault.v1.GetAccountRequest
 */
export declare class GetAccountRequest extends Message<GetAccountRequest> {
  /**
   * @generated from field: string sonr_id = 1;
   */
  sonrId: string;

  /**
   * @generated from field: string coin_type = 2;
   */
  coinType: string;

  constructor(data?: PartialMessage<GetAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.GetAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountRequest;

  static equals(a: GetAccountRequest | PlainMessage<GetAccountRequest> | undefined, b: GetAccountRequest | PlainMessage<GetAccountRequest> | undefined): boolean;
}

/**
 * GetAccountResponse is the response to a GetAccount request.
 *
 * @generated from message sonrhq.sonr.vault.v1.GetAccountResponse
 */
export declare class GetAccountResponse extends Message<GetAccountResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string coin_type = 2;
   */
  coinType: string;

  /**
   * @generated from field: repeated sonrhq.sonr.common.AccountInfo accounts = 4;
   */
  accounts: AccountInfo[];

  constructor(data?: PartialMessage<GetAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.GetAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAccountResponse;

  static equals(a: GetAccountResponse | PlainMessage<GetAccountResponse> | undefined, b: GetAccountResponse | PlainMessage<GetAccountResponse> | undefined): boolean;
}

/**
 * ListAccountsRequest is the request to list the accounts.
 *
 * @generated from message sonrhq.sonr.vault.v1.ListAccountsRequest
 */
export declare class ListAccountsRequest extends Message<ListAccountsRequest> {
  /**
   * @generated from field: string sonr_id = 1;
   */
  sonrId: string;

  constructor(data?: PartialMessage<ListAccountsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.ListAccountsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountsRequest;

  static equals(a: ListAccountsRequest | PlainMessage<ListAccountsRequest> | undefined, b: ListAccountsRequest | PlainMessage<ListAccountsRequest> | undefined): boolean;
}

/**
 * ListAccountsResponse is the response to a ListAccounts request.
 *
 * @generated from message sonrhq.sonr.vault.v1.ListAccountsResponse
 */
export declare class ListAccountsResponse extends Message<ListAccountsResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: repeated sonrhq.sonr.common.AccountInfo accounts = 3;
   */
  accounts: AccountInfo[];

  constructor(data?: PartialMessage<ListAccountsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.ListAccountsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountsResponse;

  static equals(a: ListAccountsResponse | PlainMessage<ListAccountsResponse> | undefined, b: ListAccountsResponse | PlainMessage<ListAccountsResponse> | undefined): boolean;
}

/**
 * DeleteAccountRequest is the request to delete an account.
 *
 * @generated from message sonrhq.sonr.vault.v1.DeleteAccountRequest
 */
export declare class DeleteAccountRequest extends Message<DeleteAccountRequest> {
  /**
   * @generated from field: string sonr_id = 1;
   */
  sonrId: string;

  /**
   * @generated from field: string target_did = 2;
   */
  targetDid: string;

  constructor(data?: PartialMessage<DeleteAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.DeleteAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static equals(a: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined, b: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined): boolean;
}

/**
 * DeleteAccountResponse is the response to a DeleteAccount request.
 *
 * @generated from message sonrhq.sonr.vault.v1.DeleteAccountResponse
 */
export declare class DeleteAccountResponse extends Message<DeleteAccountResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: sonrhq.core.identity.DidDocument did_document = 2;
   */
  didDocument?: DidDocument;

  /**
   * @generated from field: repeated sonrhq.sonr.common.AccountInfo accounts = 3;
   */
  accounts: AccountInfo[];

  constructor(data?: PartialMessage<DeleteAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.sonr.vault.v1.DeleteAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static equals(a: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined, b: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined): boolean;
}

