// @generated by protoc-gen-es v1.1.0
// @generated from file core/identity/did.proto (package sonrhq.core.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

// Sonr API
//
// Sonr is a peer-to-peer identity and asset management system that leverages DID documents, Webauthn, and IPFS â€” providing users with a secure, user-friendly way to manage their digital identity and assets.

import { proto3 } from "@bufbuild/protobuf";

/**
 * DIDMethod is the DID method for each supported resolver.
 *
 * @generated from enum sonrhq.core.identity.DIDMethod
 */
export const DIDMethod = proto3.makeEnum(
  "sonrhq.core.identity.DIDMethod",
  [
    {no: 0, name: "DIDMethod_BLOCKCHAIN"},
    {no: 1, name: "DIDMethod_WEB"},
    {no: 2, name: "DIDMethod_KEY"},
    {no: 3, name: "DIDMethod_IPFS"},
    {no: 4, name: "DIDMethod_PEER"},
  ],
);

/**
 * @generated from message sonrhq.core.identity.DidDocument
 */
export const DidDocument = proto3.makeMessageType(
  "sonrhq.core.identity.DidDocument",
  () => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "verification_method", kind: "message", T: VerificationMethod, repeated: true },
    { no: 5, name: "authentication", kind: "message", T: VerificationRelationship, repeated: true },
    { no: 6, name: "assertion_method", kind: "message", T: VerificationRelationship, repeated: true },
    { no: 7, name: "capability_invocation", kind: "message", T: VerificationRelationship, repeated: true },
    { no: 8, name: "capability_delegation", kind: "message", T: VerificationRelationship, repeated: true },
    { no: 9, name: "key_agreement", kind: "message", T: VerificationRelationship, repeated: true },
    { no: 10, name: "service", kind: "message", T: Service, repeated: true },
    { no: 11, name: "also_known_as", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "metadata", kind: "message", T: KeyValuePair, repeated: true },
  ],
);

/**
 * @generated from message sonrhq.core.identity.VerificationMethod
 */
export const VerificationMethod = proto3.makeMessageType(
  "sonrhq.core.identity.VerificationMethod",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "public_key_jwk", kind: "message", T: KeyValuePair, repeated: true },
    { no: 5, name: "public_key_multibase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "blockchain_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "metadata", kind: "message", T: KeyValuePair, repeated: true },
  ],
);

/**
 * @generated from message sonrhq.core.identity.VerificationRelationship
 */
export const VerificationRelationship = proto3.makeMessageType(
  "sonrhq.core.identity.VerificationRelationship",
  () => [
    { no: 1, name: "verification_method", kind: "message", T: VerificationMethod },
    { no: 2, name: "reference", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.Service
 */
export const Service = proto3.makeMessageType(
  "sonrhq.core.identity.Service",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "origin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "service_endpoints", kind: "message", T: KeyValuePair, repeated: true },
    { no: 7, name: "metadata", kind: "message", T: KeyValuePair, repeated: true },
  ],
);

/**
 * @generated from message sonrhq.core.identity.KeyValuePair
 */
export const KeyValuePair = proto3.makeMessageType(
  "sonrhq.core.identity.KeyValuePair",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

