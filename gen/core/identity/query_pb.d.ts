// @generated by protoc-gen-es v1.1.0
// @generated from file core/identity/query.proto (package sonrhq.core.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Params } from "./genesis_pb.js";
import type { DidDocument, Service } from "./did_pb.js";
import type { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sonrhq.core.identity.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sonrhq.core.identity.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sonrhq.core.identity.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryGetDidRequest
 */
export declare class QueryGetDidRequest extends Message<QueryGetDidRequest> {
  /**
   * did is the unique identifier of the DIDDocument - it appears like (did:sonr:...)
   *
   * @generated from field: string did = 1;
   */
  did: string;

  constructor(data?: PartialMessage<QueryGetDidRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryGetDidRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetDidRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetDidRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetDidRequest;

  static equals(a: QueryGetDidRequest | PlainMessage<QueryGetDidRequest> | undefined, b: QueryGetDidRequest | PlainMessage<QueryGetDidRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryGetDidResponse
 */
export declare class QueryGetDidResponse extends Message<QueryGetDidResponse> {
  /**
   * A DIDDocument is a JSON-LD object that contains a set of public keys
   *
   * @generated from field: sonrhq.core.identity.DidDocument didDocument = 1;
   */
  didDocument?: DidDocument;

  constructor(data?: PartialMessage<QueryGetDidResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryGetDidResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetDidResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetDidResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetDidResponse;

  static equals(a: QueryGetDidResponse | PlainMessage<QueryGetDidResponse> | undefined, b: QueryGetDidResponse | PlainMessage<QueryGetDidResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryDidByKeyIDRequest
 */
export declare class QueryDidByKeyIDRequest extends Message<QueryDidByKeyIDRequest> {
  /**
   * key_id is the unique identifier of the DIDDocument - it appears like (did:sonr:...#key-1)
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;

  constructor(data?: PartialMessage<QueryDidByKeyIDRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByKeyIDRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByKeyIDRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByKeyIDRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByKeyIDRequest;

  static equals(a: QueryDidByKeyIDRequest | PlainMessage<QueryDidByKeyIDRequest> | undefined, b: QueryDidByKeyIDRequest | PlainMessage<QueryDidByKeyIDRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryDidByKeyIDResponse
 */
export declare class QueryDidByKeyIDResponse extends Message<QueryDidByKeyIDResponse> {
  /**
   * A DIDDocument is a JSON-LD object that contains a set of public keys
   *
   * @generated from field: sonrhq.core.identity.DidDocument didDocument = 1;
   */
  didDocument?: DidDocument;

  constructor(data?: PartialMessage<QueryDidByKeyIDResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByKeyIDResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByKeyIDResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByKeyIDResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByKeyIDResponse;

  static equals(a: QueryDidByKeyIDResponse | PlainMessage<QueryDidByKeyIDResponse> | undefined, b: QueryDidByKeyIDResponse | PlainMessage<QueryDidByKeyIDResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryDidByAlsoKnownAsRequest
 */
export declare class QueryDidByAlsoKnownAsRequest extends Message<QueryDidByAlsoKnownAsRequest> {
  /**
   * aka_id is the unique identifier of the DIDDocument - it appears like ("example.snr")
   *
   * @generated from field: string aka_id = 1;
   */
  akaId: string;

  constructor(data?: PartialMessage<QueryDidByAlsoKnownAsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByAlsoKnownAsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByAlsoKnownAsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByAlsoKnownAsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByAlsoKnownAsRequest;

  static equals(a: QueryDidByAlsoKnownAsRequest | PlainMessage<QueryDidByAlsoKnownAsRequest> | undefined, b: QueryDidByAlsoKnownAsRequest | PlainMessage<QueryDidByAlsoKnownAsRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryDidByAlsoKnownAsResponse
 */
export declare class QueryDidByAlsoKnownAsResponse extends Message<QueryDidByAlsoKnownAsResponse> {
  /**
   * A DIDDocument is a JSON-LD object that contains a set of public keys
   *
   * @generated from field: sonrhq.core.identity.DidDocument didDocument = 1;
   */
  didDocument?: DidDocument;

  constructor(data?: PartialMessage<QueryDidByAlsoKnownAsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByAlsoKnownAsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByAlsoKnownAsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByAlsoKnownAsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByAlsoKnownAsResponse;

  static equals(a: QueryDidByAlsoKnownAsResponse | PlainMessage<QueryDidByAlsoKnownAsResponse> | undefined, b: QueryDidByAlsoKnownAsResponse | PlainMessage<QueryDidByAlsoKnownAsResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryAllDidRequest
 */
export declare class QueryAllDidRequest extends Message<QueryAllDidRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllDidRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryAllDidRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDidRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDidRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDidRequest;

  static equals(a: QueryAllDidRequest | PlainMessage<QueryAllDidRequest> | undefined, b: QueryAllDidRequest | PlainMessage<QueryAllDidRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryAllDidResponse
 */
export declare class QueryAllDidResponse extends Message<QueryAllDidResponse> {
  /**
   * @generated from field: repeated sonrhq.core.identity.DidDocument didDocument = 1;
   */
  didDocument: DidDocument[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllDidResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryAllDidResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDidResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDidResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDidResponse;

  static equals(a: QueryAllDidResponse | PlainMessage<QueryAllDidResponse> | undefined, b: QueryAllDidResponse | PlainMessage<QueryAllDidResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryGetServiceRequest
 */
export declare class QueryGetServiceRequest extends Message<QueryGetServiceRequest> {
  /**
   * origin is the hostname of the calling service - it appears like ("test.com")
   *
   * @generated from field: string origin = 1;
   */
  origin: string;

  constructor(data?: PartialMessage<QueryGetServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryGetServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetServiceRequest;

  static equals(a: QueryGetServiceRequest | PlainMessage<QueryGetServiceRequest> | undefined, b: QueryGetServiceRequest | PlainMessage<QueryGetServiceRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryGetServiceResponse
 */
export declare class QueryGetServiceResponse extends Message<QueryGetServiceResponse> {
  /**
   * A Service is a JSON-LD object that contains relaying information to authenticate a client
   *
   * @generated from field: sonrhq.core.identity.Service service = 1;
   */
  service?: Service;

  constructor(data?: PartialMessage<QueryGetServiceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryGetServiceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetServiceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetServiceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetServiceResponse;

  static equals(a: QueryGetServiceResponse | PlainMessage<QueryGetServiceResponse> | undefined, b: QueryGetServiceResponse | PlainMessage<QueryGetServiceResponse> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryAllServiceRequest
 */
export declare class QueryAllServiceRequest extends Message<QueryAllServiceRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryAllServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllServiceRequest;

  static equals(a: QueryAllServiceRequest | PlainMessage<QueryAllServiceRequest> | undefined, b: QueryAllServiceRequest | PlainMessage<QueryAllServiceRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryAllServiceResponse
 */
export declare class QueryAllServiceResponse extends Message<QueryAllServiceResponse> {
  /**
   * @generated from field: repeated sonrhq.core.identity.Service services = 1;
   */
  services: Service[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllServiceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryAllServiceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllServiceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllServiceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllServiceResponse;

  static equals(a: QueryAllServiceResponse | PlainMessage<QueryAllServiceResponse> | undefined, b: QueryAllServiceResponse | PlainMessage<QueryAllServiceResponse> | undefined): boolean;
}

/**
 * this line is used by starport scaffolding # 3
 *
 * @generated from message sonrhq.core.identity.QueryDidByPubKeyRequest
 */
export declare class QueryDidByPubKeyRequest extends Message<QueryDidByPubKeyRequest> {
  /**
   * Public key is a base64 encoded string of the public key
   *
   * @generated from field: string pubkey = 1;
   */
  pubkey: string;

  /**
   * Create account if it doesn't exist
   *
   * @generated from field: bool create = 2;
   */
  create: boolean;

  constructor(data?: PartialMessage<QueryDidByPubKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByPubKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByPubKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByPubKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByPubKeyRequest;

  static equals(a: QueryDidByPubKeyRequest | PlainMessage<QueryDidByPubKeyRequest> | undefined, b: QueryDidByPubKeyRequest | PlainMessage<QueryDidByPubKeyRequest> | undefined): boolean;
}

/**
 * @generated from message sonrhq.core.identity.QueryDidByPubKeyResponse
 */
export declare class QueryDidByPubKeyResponse extends Message<QueryDidByPubKeyResponse> {
  constructor(data?: PartialMessage<QueryDidByPubKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "sonrhq.core.identity.QueryDidByPubKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDidByPubKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDidByPubKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDidByPubKeyResponse;

  static equals(a: QueryDidByPubKeyResponse | PlainMessage<QueryDidByPubKeyResponse> | undefined, b: QueryDidByPubKeyResponse | PlainMessage<QueryDidByPubKeyResponse> | undefined): boolean;
}

