// @generated by protoc-gen-es v1.1.0
// @generated from file core/identity/query.proto (package sonrhq.core.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Params } from "./genesis_pb.js";
import { DidDocument, Service } from "./did_pb.js";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sonrhq.core.identity.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sonrhq.core.identity.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryGetDidRequest
 */
export const QueryGetDidRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryGetDidRequest",
  () => [
    { no: 1, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryGetDidResponse
 */
export const QueryGetDidResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryGetDidResponse",
  () => [
    { no: 1, name: "didDocument", kind: "message", T: DidDocument },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryDidByKeyIDRequest
 */
export const QueryDidByKeyIDRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByKeyIDRequest",
  () => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryDidByKeyIDResponse
 */
export const QueryDidByKeyIDResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByKeyIDResponse",
  () => [
    { no: 1, name: "didDocument", kind: "message", T: DidDocument },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryDidByAlsoKnownAsRequest
 */
export const QueryDidByAlsoKnownAsRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByAlsoKnownAsRequest",
  () => [
    { no: 1, name: "aka_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryDidByAlsoKnownAsResponse
 */
export const QueryDidByAlsoKnownAsResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByAlsoKnownAsResponse",
  () => [
    { no: 1, name: "didDocument", kind: "message", T: DidDocument },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryAllDidRequest
 */
export const QueryAllDidRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryAllDidRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryAllDidResponse
 */
export const QueryAllDidResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryAllDidResponse",
  () => [
    { no: 1, name: "didDocument", kind: "message", T: DidDocument, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryGetServiceRequest
 */
export const QueryGetServiceRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryGetServiceRequest",
  () => [
    { no: 1, name: "origin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryGetServiceResponse
 */
export const QueryGetServiceResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryGetServiceResponse",
  () => [
    { no: 1, name: "service", kind: "message", T: Service },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryAllServiceRequest
 */
export const QueryAllServiceRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryAllServiceRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryAllServiceResponse
 */
export const QueryAllServiceResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryAllServiceResponse",
  () => [
    { no: 1, name: "services", kind: "message", T: Service, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * this line is used by starport scaffolding # 3
 *
 * @generated from message sonrhq.core.identity.QueryDidByPubKeyRequest
 */
export const QueryDidByPubKeyRequest = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByPubKeyRequest",
  () => [
    { no: 1, name: "pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message sonrhq.core.identity.QueryDidByPubKeyResponse
 */
export const QueryDidByPubKeyResponse = proto3.makeMessageType(
  "sonrhq.core.identity.QueryDidByPubKeyResponse",
  [],
);

