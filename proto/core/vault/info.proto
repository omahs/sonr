syntax = "proto3";
package sonrhq.core.vault;

option go_package = "github.com/sonrhq/core/x/vault/types";



// Account represents a user's account on a blockchain or network. It contains the user's address, name, DID, and other information that is used to identify and manage the account.
message AccountInfo {
    //  This field represents the unique account address associated with the user. It is typically a hash or an encoded public key, depending on the underlying blockchain or network.
    string address = 1;

    // This field contains the human-readable name associated with the account. It is used for easier identification and management of the account by the user.
    string name = 2;

    // This field stores the Decentralized Identifier (DID) of the user, which is a unique, resolvable, and cryptographically verifiable identifier. DIDs are used to enable secure and decentralized identity management.
    string did = 3;

    // This field specifies the type of the cryptocurrency or token associated with the account. It is used to differentiate between various cryptocurrencies or tokens that the user may hold in their wallet.
    string coin_type = 4;

    // This field represents the identifier of the blockchain or network that the account is associated with. Chain IDs are used to distinguish between different blockchains or networks, such as Ethereum, Cosmos, or Filecoin.
    string chain_id = 5;

    // This field stores the base64 encoded public key of the account, which is used for cryptographic operations such as signing and verifying transactions. The public key is derived from the user's private key and is an essential part of the account's security.
    string public_key = 6;

    // This field stores the type of the public key. It is used to differentiate between various public key types, such as secp256k1, ed25519, and sr25519.
    string type = 7;
}

// Basic Info Sent to Peers to Establish Connections
message PeerInfo {
  string id = 1;       // User Sonr Account Decentralized ID
  string name = 2;     // User Defined Label for Peer, also known as PartyID
  string peer_id = 3;  // Peer ID
  string multiaddr = 4; // Peer Multiaddress
}
