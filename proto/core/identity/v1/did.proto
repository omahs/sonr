syntax = "proto3";
package sonrhq.core.identity.v1;

import "common/v1/data.proto";
import "core/identity/v1/ssi.proto";
import "core/identity/v1/vc.proto";

option go_package = "github.com/sonrhq/core/x/identity/types";

// DidDocument is a representation of a DID Document as defined in the W3C DID
message DidDocument {
  // context is a list of URIs that are used to identify the context of the DID
  repeated string context = 1;

  // id is the DID of the DID Document
  string iD = 2;

  // verificationMethod is a list of verification methods that can be used to
  repeated string controller = 3; //optional

  VerificationMethods verification_method = 4; // optional
  VerificationRelationships authentication = 5; // optional
  VerificationRelationships assertion_method = 6; // optional
  VerificationRelationships capability_invocation = 7; // optional
  VerificationRelationships capability_delegation = 8; // optional
  VerificationRelationships key_agreement = 9; // optional
  Services service = 10; // optional
  repeated string also_known_as = 11; // optional
  repeated KeyValuePair metadata = 12; // optional
}

message VerificationMethod {
  string iD = 1;
  KeyType type = 2;
  string controller = 3;
  repeated KeyValuePair public_key_jwk = 4; // optional
  string public_key_multibase = 5; // optional
  string blockchain_account_id = 6; // optional
  repeated KeyValuePair metadata = 7;
}

message VerificationRelationship {
  VerificationMethod verification_method = 1;
  string reference = 2;
}

message Service {
  string iD = 1;
  ServiceType type = 2;
  string service_endpoint = 3;
  repeated KeyValuePair service_endpoints = 4; // optional
  repeated KeyValuePair metadata = 7;
}

message Services {
  repeated Service data = 1;
}

message VerificationMethods {
  repeated VerificationMethod data = 1;
}

message VerificationRelationships {
  repeated VerificationRelationship data = 1;
}

message KeyValuePair {
  string key = 1;
  string value = 2;
}
