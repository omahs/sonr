syntax = "proto3";

package sonrhq.core.domain;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "core/domain/genesis.proto";
import "core/domain/domain.proto";

option go_package = "github.com/sonrhq/core/x/domain/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sonrhq/core/domain/params";

  }

  // Queries a list of TLDRecord items.
  rpc TLDRecord    (QueryGetTLDRecordRequest) returns (QueryGetTLDRecordResponse) {
    option (google.api.http).get = "/sonrhq/core/domain/tld_record/{index}";

  }
  rpc TLDRecordAll (QueryAllTLDRecordRequest) returns (QueryAllTLDRecordResponse) {
    option (google.api.http).get = "/sonrhq/core/domain/tld_record";

  }

  // Queries a list of SLDRecord items.
  rpc SLDRecord    (QueryGetSLDRecordRequest) returns (QueryGetSLDRecordResponse) {
    option (google.api.http).get = "/sonrhq/core/domain/sld_record/{index}";

  }
  rpc SLDRecordAll (QueryAllSLDRecordRequest) returns (QueryAllSLDRecordResponse) {
    option (google.api.http).get = "/sonrhq/core/domain/sld_record";

  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTLDRecordRequest {
  string index = 1;
}

message QueryGetTLDRecordResponse {
  TLDRecord tLDRecord = 1 [(gogoproto.nullable) = false];
}

message QueryAllTLDRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTLDRecordResponse {
  repeated TLDRecord                              tLDRecord  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSLDRecordRequest {
  string index = 1;
}

message QueryGetSLDRecordResponse {
  SLDRecord sLDRecord = 1 [(gogoproto.nullable) = false];
}

message QueryAllSLDRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSLDRecordResponse {
  repeated SLDRecord                              sLDRecord  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

