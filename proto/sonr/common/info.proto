syntax = "proto3";
package sonrhq.sonr.common;

option go_package = "github.com/sonrhq/core/types/common";

// Account is used for storing all credentials and their locations to be encrypted.
message AccountInfo {
  // Address is the associated Sonr address.
  string address = 1;

  // Credentials is a list of all credentials associated with the account.
  string network = 2;

  // Label is the label of the account.
  string label = 3;

  // Index is the index of the account.
  uint32 index = 4;

  // Balance is the balance of the account.
  int32 balance = 5;
}

// Basic Info Sent to Peers to Establish Connections
message PeerInfo {
  string id = 1;       // User Sonr Account Decentralized ID
  string name = 2;     // User Defined Label for Peer, also known as PartyID
  string peer_id = 3;  // Peer ID
  string multiaddr = 4; // Peer Multiaddress
  PeerType type = 5;      // Type of Peer
}

// Peers Active Type
enum PeerType {
  UNKNOWN = 0;
  HIGHWAY = 1;
  MOTOR = 2;
  VALIDATOR = 3;
  THIRD_PARTY = 4;
}


message WalletInfo {
  // Controller is the associated Sonr address.
  string controller = 1;

  // DiscoverPaths is a list of all known hardened coin type paths.
  repeated int32 discovered_paths = 2;

  // Algorithm is the algorithm of the wallet. CMP is the default.
  string algorithm = 3;

  // CreatedAt is the time the wallet was created.
  int64 created_at = 4;

  // LastUpdated is the last time the wallet was updated.
  int64 last_updated = 5;
}
