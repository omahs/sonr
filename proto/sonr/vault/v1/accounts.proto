syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrhq.sonr.vault.v1;

import "core/identity/v1/did.proto";
import "google/api/annotations.proto";
import "sonr/common/info.proto";

option go_package = "github.com/sonrhq/core/types/vault/v1";

// CreateAccountRequest is the request to create an account.
message CreateAccountRequest {
  string sonr_id = 1;
  string coin_type = 2;
}

// CreateAccountResponse is the response to a CreateAccount request.
message CreateAccountResponse {
  bool success = 1;
  string coin_type = 2;
  core.identity.v1.DidDocument did_document = 3;
  repeated sonr.common.AccountInfo accounts = 4;
}

// GetAccountRequest is the request to get an account.
message GetAccountRequest {
  string sonr_id = 1;
  string coin_type = 2;
}

// GetAccountResponse is the response to a GetAccount request.
message GetAccountResponse {
  bool success = 1;
  string coin_type = 2;
  repeated sonr.common.AccountInfo accounts = 4;
}

// ListAccountsRequest is the request to list the accounts.
message ListAccountsRequest {
  string sonr_id = 1;
}

// ListAccountsResponse is the response to a ListAccounts request.
message ListAccountsResponse {
  bool success = 1;
  repeated sonr.common.AccountInfo accounts = 3;
}

// DeleteAccountRequest is the request to delete an account.
message DeleteAccountRequest {
  string sonr_id = 1;
  string target_did = 2;
}

// DeleteAccountResponse is the response to a DeleteAccount request.
message DeleteAccountResponse {
  bool success = 1;
  core.identity.v1.DidDocument did_document = 2;
  repeated sonr.common.AccountInfo accounts = 3;
}

// ==================================================================
// GRPC/REST SERVICE
// ==================================================================

// Vault is the service used for managing a node's keypair.
service VaultAccounts {
  // Create a new account
  //
  // {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
  // It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
  //
  // #### {{.RequestType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .RequestType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  //
  //
  // #### {{.ResponseType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http) = {
      post: "/sonr/vault/accounts/{sonr_id}/create"
      body: "*"
    };
  }

  // List the accounts
  //
  // {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
  // It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
  //
  // #### {{.RequestType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .RequestType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  //
  //
  // #### {{.ResponseType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
    option (google.api.http) = {
      get: "/sonr/vault/accounts/{sonr_id}"
    };
  }

  // Get Account
  //
  // {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
  // It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
  //
  // #### {{.RequestType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .RequestType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  //
  //
  // #### {{.ResponseType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/sonr/vault/accounts/{sonr_id}/{coin_type}"
    };
  }

  // Delete Account
  //
  // {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
  // It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
  //
  // #### {{.RequestType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .RequestType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  //
  //
  // #### {{.ResponseType.Name}}
  // | Name | Type | Description |
  // | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
  // | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse) {
    option (google.api.http) = {
      post: "/sonr/vault/accounts/{target_did}/delete"
      body: "*"
    };
  }
}
