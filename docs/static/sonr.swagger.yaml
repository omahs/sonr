swagger: "2.0"
info:
  title: core/domain/domain.proto
  version: version not set
tags:
  - name: Query
  - name: Msg
  - name: Query
  - name: Msg
  - name: Query
  - name: Msg
  - name: Mpc
  - name: Authentication
  - name: Vault
consumes:
  - application/json
produces:
  - application/json
paths:
  /sonr/core/identity/alias/{alias}:
    get:
      summary: Queries a list of AliasAvailable items.
      operationId: Query_AliasAvailable
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/identityQueryAliasAvailableResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: alias
          description: alias is the unique identifier of the DIDDocument - it appears like ("example.snr")
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonr/core/identity/did:
    get:
      summary: |-
        #### {{.ResponseType.Name}}
        | Name | Type | Description |
        | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
        | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
      operationId: Query_DidAll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/identityQueryAllDidResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /sonr/core/identity/did/{did}:
    get:
      summary: |-
        #### {{.ResponseType.Name}}
        | Name | Type | Description |
        | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
        | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
      operationId: Query_Did
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/identityQueryGetDidResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: did
          description: did is the unique identifier of the DIDDocument - it appears like (did:sonr:...)
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonr/core/identity/did/aka/{akaId}:
    get:
      summary: |-
        #### {{.ResponseType.Name}}
        | Name | Type | Description |
        | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
        | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
      operationId: Query_DidByAlsoKnownAs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/identityQueryDidByAlsoKnownAsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: akaId
          description: aka_id is the unique identifier of the DIDDocument - it appears like ("example.snr")
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonr/core/identity/did/key/{keyId}:
    get:
      summary: |-
        #### {{.ResponseType.Name}}
        | Name | Type | Description |
        | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
        | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
      operationId: Query_DidByKeyID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/identityQueryDidByKeyIDResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: keyId
          description: key_id is the unique identifier of the DIDDocument - it appears like (did:sonr:...#key-1)
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonr/core/identity/params:
    get:
      summary: |-
        #### {{.ResponseType.Name}}
        | Name | Type | Description |
        | ---- | ---- | ----------- |{{range .ResponseType.Fields}}
        | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}
      operationId: Query_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coreidentityQueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Query
  /sonr/core/service/record:
    get:
      operationId: Query_ServiceRecordAll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/serviceQueryAllServiceRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /sonr/core/service/record/{id}:
    get:
      summary: Queries a list of ServiceRecord items.
      operationId: Query_ServiceRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/serviceQueryGetServiceRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonrhq/core/domain/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: Query_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coredomainQueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Query
  /sonrhq/core/domain/sld_record:
    get:
      operationId: Query_SLDRecordAll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/domainQueryAllSLDRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /sonrhq/core/domain/sld_record/{index}:
    get:
      summary: Queries a list of SLDRecord items.
      operationId: Query_SLDRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/domainQueryGetSLDRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: index
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonrhq/core/domain/tld_record:
    get:
      operationId: Query_TLDRecordAll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/domainQueryAllTLDRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /sonrhq/core/domain/tld_record/{index}:
    get:
      summary: Queries a list of TLDRecord items.
      operationId: Query_TLDRecord
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/domainQueryGetTLDRecordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: index
          in: path
          required: true
          type: string
      tags:
        - Query
  /sonrhq/core/service/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: Query_Params
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coreserviceQueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Query
definitions:
  coredomainParams:
    type: object
    properties:
      dnsResolverIp:
        type: string
    description: Params defines the parameters for the module.
  coredomainQueryParamsResponse:
    type: object
    properties:
      params:
        $ref: '#/definitions/coredomainParams'
        description: params holds all the parameters of this module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  coreidentityKeyValuePair:
    type: object
    properties:
      key:
        type: string
        title: The key
      value:
        type: string
        title: The value
    description: KeyValuePair represents a key-value pair.
  coreidentityParams:
    type: object
    properties:
      didBaseContext:
        type: string
      didMethodContext:
        type: string
      didMethodName:
        type: string
      didMethodVersion:
        type: string
      didNetwork:
        type: string
      ipfsGateway:
        type: string
      ipfsApi:
        type: string
      webauthnAttestionPreference:
        type: string
      webauthnAuthenticatorAttachment:
        type: string
      webauthnTimeout:
        type: integer
        format: int32
    description: Params defines the parameters for the module.
  coreidentityQueryParamsResponse:
    type: object
    properties:
      params:
        $ref: '#/definitions/coreidentityParams'
        description: params holds all the parameters of this module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  coreserviceKeyValuePair:
    type: object
    properties:
      key:
        type: string
        title: The key
      value:
        type: string
        title: The value
    description: KeyValuePair represents a key-value pair.
  coreserviceParams:
    type: object
    description: Params defines the parameters for the module.
  coreserviceQueryParamsResponse:
    type: object
    properties:
      params:
        $ref: '#/definitions/coreserviceParams'
        description: params holds all the parameters of this module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  domainMsgCreateSLDRecordResponse:
    type: object
  domainMsgCreateTLDRecordResponse:
    type: object
  domainMsgDeleteSLDRecordResponse:
    type: object
  domainMsgDeleteTLDRecordResponse:
    type: object
  domainMsgUpdateSLDRecordResponse:
    type: object
  domainMsgUpdateTLDRecordResponse:
    type: object
  domainQueryAllSLDRecordResponse:
    type: object
    properties:
      sLDRecord:
        type: array
        items:
          type: object
          $ref: '#/definitions/domainSLDRecord'
      pagination:
        $ref: '#/definitions/v1beta1PageResponse'
  domainQueryAllTLDRecordResponse:
    type: object
    properties:
      tLDRecord:
        type: array
        items:
          type: object
          $ref: '#/definitions/domainTLDRecord'
      pagination:
        $ref: '#/definitions/v1beta1PageResponse'
  domainQueryGetSLDRecordResponse:
    type: object
    properties:
      sLDRecord:
        $ref: '#/definitions/domainSLDRecord'
  domainQueryGetTLDRecordResponse:
    type: object
    properties:
      tLDRecord:
        $ref: '#/definitions/domainTLDRecord'
  domainSLDRecord:
    type: object
    properties:
      index:
        type: string
      creator:
        type: string
  domainTLDRecord:
    type: object
    properties:
      index:
        type: string
      creator:
        type: string
  identityDidDocument:
    type: object
    properties:
      context:
        type: array
        items:
          type: string
        title: The JSON-LD context(s) used in the document
      id:
        type: string
        title: The identifier for the DID subject
      controller:
        type: array
        items:
          type: string
        title: optional, the entity/entities controlling the DID subject
      verificationMethod:
        type: array
        items:
          type: object
          $ref: '#/definitions/identityVerificationMethod'
        title: optional, the set of verification methods associated with the DID subject
      authentication:
        type: array
        items:
          type: string
        title: optional, the set of authentication methods associated with the DID subject
      assertionMethod:
        type: array
        items:
          type: string
        title: optional, the set of assertion methods associated with the DID subject
      capabilityInvocation:
        type: array
        items:
          type: string
        title: optional, the set of capability invocation methods associated with the DID subject
      capabilityDelegation:
        type: array
        items:
          type: string
        title: optional, the set of capability delegation methods associated with the DID subject
      keyAgreement:
        type: array
        items:
          type: string
        title: optional, the set of key agreement methods associated with the DID subject
      alsoKnownAs:
        type: array
        items:
          type: string
        title: optional, the set of identifiers for other personas or identities related to the DID subject
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/coreidentityKeyValuePair'
        title: optional, additional metadata related to the DID document
    description: DidDocument represents a Decentralized Identifier (DID) document that contains information about the DID subject, such as public keys, verification methods, and services.
  identityMsgCreateDidDocumentResponse:
    type: object
  identityMsgDeleteDidDocumentResponse:
    type: object
  identityMsgUpdateDidDocumentResponse:
    type: object
    properties:
      creator:
        type: string
  identityQueryAliasAvailableResponse:
    type: object
    properties:
      available:
        type: boolean
      existingDocument:
        $ref: '#/definitions/identityDidDocument'
  identityQueryAllDidResponse:
    type: object
    properties:
      didDocument:
        type: array
        items:
          type: object
          $ref: '#/definitions/identityDidDocument'
      pagination:
        $ref: '#/definitions/v1beta1PageResponse'
  identityQueryDidByAlsoKnownAsResponse:
    type: object
    properties:
      didDocument:
        $ref: '#/definitions/identityDidDocument'
        title: A DIDDocument is a JSON-LD object that contains a set of public keys
  identityQueryDidByKeyIDResponse:
    type: object
    properties:
      didDocument:
        $ref: '#/definitions/identityDidDocument'
        title: A DIDDocument is a JSON-LD object that contains a set of public keys
  identityQueryGetDidResponse:
    type: object
    properties:
      didDocument:
        $ref: '#/definitions/identityDidDocument'
        title: A DIDDocument is a JSON-LD object that contains a set of public keys
  identityVerificationMethod:
    type: object
    properties:
      id:
        type: string
        title: The identifier for the verification method
      type:
        type: string
        title: The type of the verification method
      controller:
        type: string
        title: The entity controlling the verification method
      publicKeyJwk:
        type: array
        items:
          type: object
          $ref: '#/definitions/coreidentityKeyValuePair'
        title: optional, the public key in JSON Web Key (JWK) format
      publicKeyMultibase:
        type: string
        title: optional, the public key in multibase-encoded format
      blockchainAccountId:
        type: string
        title: optional, the blockchain account identifier associated with the verification method
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/coreidentityKeyValuePair'
        title: additional metadata related to the verification method
    description: VerificationMethod represents a verification method that can be used to authenticate the DID subject or perform other cryptographic operations.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  serviceMsgCreateServiceRecordResponse:
    type: object
  serviceMsgDeleteServiceRecordResponse:
    type: object
  serviceMsgUpdateServiceRecordResponse:
    type: object
  serviceQueryAllServiceRecordResponse:
    type: object
    properties:
      serviceRecord:
        type: array
        items:
          type: object
          $ref: '#/definitions/serviceServiceRecord'
      pagination:
        $ref: '#/definitions/v1beta1PageResponse'
  serviceQueryGetServiceRecordResponse:
    type: object
    properties:
      serviceRecord:
        $ref: '#/definitions/serviceServiceRecord'
  serviceServiceRecord:
    type: object
    properties:
      id:
        type: string
      controller:
        type: string
        title: The entity controlling the service
      type:
        type: string
        title: The type of the service
      origin:
        type: string
        title: The origin of the service (e.g., a URL or other endpoint)
      name:
        type: string
        title: The name of the service
      serviceEndpoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/coreserviceKeyValuePair'
        title: optional, the set of service endpoints associated with the service
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/coreserviceKeyValuePair'
        title: optional, additional metadata related to the Service
  v1Account:
    type: object
    properties:
      address:
        type: string
        description: This field represents the unique account address associated with the user. It is typically a hash or an encoded public key, depending on the underlying blockchain or network.
      name:
        type: string
        description: This field contains the human-readable name associated with the account. It is used for easier identification and management of the account by the user.
      did:
        type: string
        description: This field stores the Decentralized Identifier (DID) of the user, which is a unique, resolvable, and cryptographically verifiable identifier. DIDs are used to enable secure and decentralized identity management.
      coinType:
        type: string
        description: This field specifies the type of the cryptocurrency or token associated with the account. It is used to differentiate between various cryptocurrencies or tokens that the user may hold in their wallet.
      chainId:
        type: string
        description: This field represents the identifier of the blockchain or network that the account is associated with. Chain IDs are used to distinguish between different blockchains or networks, such as Ethereum, Cosmos, or Filecoin.
      publicKey:
        type: string
        description: This field stores the base64 encoded public key of the account, which is used for cryptographic operations such as signing and verifying transactions. The public key is derived from the user's private key and is an essential part of the account's security.
      type:
        type: string
        description: This field stores the type of the public key. It is used to differentiate between various public key types, such as secp256k1, ed25519, and sr25519.
    description: Account represents a user's account on a blockchain or network. It contains the user's address, name, DID, and other information that is used to identify and manage the account.
  v1AddShareResponse:
    type: object
    properties:
      success:
        type: boolean
      key:
        type: string
    description: AddShareResponse is the response to a AddShare request.
  v1ChallengeResponse:
    type: object
    properties:
      rpId:
        type: string
        description: Relaying party id for the request.
      rpName:
        type: string
        description: Relaying party name for the request.
      credentialOptions:
        type: string
        description: Credential Options for the request.
    description: ChallengeResponse is the response to a Challenge request.
  v1CreateAccountResponse:
    type: object
    properties:
      success:
        type: boolean
      coinType:
        type: string
      didDocument:
        $ref: '#/definitions/identityDidDocument'
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
    description: CreateAccountResponse is the response to a CreateAccount request.
  v1DeleteAccountResponse:
    type: object
    properties:
      success:
        type: boolean
      didDocument:
        $ref: '#/definitions/identityDidDocument'
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
    description: DeleteAccountResponse is the response to a DeleteAccount request.
  v1GetAccountResponse:
    type: object
    properties:
      success:
        type: boolean
      coinType:
        type: string
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
    description: GetAccountResponse is the response to a GetAccount request.
  v1KeygenResponse:
    type: object
    properties:
      success:
        type: boolean
        description: Success is true if the account was created.
      address:
        type: string
        description: The address of the account.
      did:
        type: string
        description: The DID of the account.
      primary:
        $ref: '#/definitions/identityDidDocument'
        description: The DID Document for the wallet.
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
        description: The DID Document for the wallet.
      transactionHash:
        type: string
        description: Transaction hash for the account creation.
      jwt:
        type: string
        description: JWT for the account.
    description: KeygenResponse is the response to a Keygen request.
  v1ListAccountsResponse:
    type: object
    properties:
      success:
        type: boolean
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
    description: ListAccountsResponse is the response to a ListAccounts request.
  v1LoginResponse:
    type: object
    properties:
      success:
        type: boolean
        description: Success is true if the account was created.
      address:
        type: string
        description: The address of the account.
      did:
        type: string
        description: The DID of the account.
      keyshares:
        type: object
        additionalProperties:
          type: string
          format: byte
        description: The keyshares for the account.
      didDocument:
        $ref: '#/definitions/identityDidDocument'
        description: The DID Document for the wallet.
      jwt:
        type: string
        description: JWT for the account.
    description: LoginFinishResponse is the response to a Login request.
  v1QueryDocumentResponse:
    type: object
    properties:
      success:
        type: boolean
        description: Success is true if the account exists.
      accountAddress:
        type: string
        description: The account address for the user.
      didDocument:
        $ref: '#/definitions/identityDidDocument'
        description: The DID Document for the wallet.
    description: LoginStartResponse is the response to a Login request.
  v1QueryServiceAssertionResponse:
    type: object
    properties:
      origin:
        type: string
        description: The Origin of the request.
      alias:
        type: string
        description: The Alias of the account to login to.
      address:
        type: string
        description: The address of the account.
      assertionOptions:
        type: string
        description: The Assertion options for the request.
    description: RegisterFinishResponse is the response to a CreateAccount request.
  v1QueryServiceResponse:
    type: object
    properties:
      challenge:
        type: string
        description: The address of the account.
      rpId:
        type: string
        description: Relaying party id for the request.
      rpName:
        type: string
        description: Relaying party name for the request.
      credentialOptions:
        type: string
        description: Credential Options for the request.
    description: RegisterFinishResponse is the response to a CreateAccount request.
  v1ReadMailResponse:
    type: object
    properties:
      success:
        type: boolean
      messages:
        type: object
        additionalProperties:
          type: string
  v1RefreshShareResponse:
    type: object
    properties:
      success:
        type: boolean
        description: Success is true if the account exists.
      accountAddress:
        type: string
        description: The account address for the user.
      credentialOptions:
        type: string
        description: Json encoded WebAuthn credential options for the user to sign with.
      rpId:
        type: string
        description: Relaying party id for the request.
      rpName:
        type: string
        description: Relaying party name for the request.
    description: LoginStartResponse is the response to a Login request.
  v1SendMailResponse:
    type: object
    properties:
      success:
        type: boolean
  v1SignMessageResponse:
    type: object
    properties:
      success:
        type: boolean
      did:
        type: string
      signature:
        type: string
      message:
        type: string
    description: SignMessageResponse is the response to a SignWithAccount request.
  v1SyncShareResponse:
    type: object
    properties:
      success:
        type: boolean
        description: Success is true if the account exists.
      key:
        type: string
        description: The key for the item.
      value:
        type: string
        description: The value for the item.
    description: RegisterFinishResponse is the response to a CreateAccount request.
  v1VerifyMessageResponse:
    type: object
    properties:
      success:
        type: boolean
      did:
        type: string
    description: VerifyWithAccountResponse is the response to a VerifyWithAccount request.
  v1beta1PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
      countTotal:
        type: boolean
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
      reverse:
        type: boolean
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  v1beta1PageResponse:
    type: object
    properties:
      nextKey:
        type: string
        format: byte
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
