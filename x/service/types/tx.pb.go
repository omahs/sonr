// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core/service/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterServiceRecord struct {
	Controller string         `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Record     *ServiceRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (m *MsgRegisterServiceRecord) Reset()         { *m = MsgRegisterServiceRecord{} }
func (m *MsgRegisterServiceRecord) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterServiceRecord) ProtoMessage()    {}
func (*MsgRegisterServiceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{0}
}
func (m *MsgRegisterServiceRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterServiceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterServiceRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterServiceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterServiceRecord.Merge(m, src)
}
func (m *MsgRegisterServiceRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterServiceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterServiceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterServiceRecord proto.InternalMessageInfo

func (m *MsgRegisterServiceRecord) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgRegisterServiceRecord) GetRecord() *ServiceRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type MsgRegisterServiceRecordResponse struct {
	Ok           bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	GroupAddress string `protobuf:"bytes,2,opt,name=group_address,json=groupAddress,proto3" json:"group_address,omitempty"`
}

func (m *MsgRegisterServiceRecordResponse) Reset()         { *m = MsgRegisterServiceRecordResponse{} }
func (m *MsgRegisterServiceRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterServiceRecordResponse) ProtoMessage()    {}
func (*MsgRegisterServiceRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{1}
}
func (m *MsgRegisterServiceRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterServiceRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterServiceRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterServiceRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterServiceRecordResponse.Merge(m, src)
}
func (m *MsgRegisterServiceRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterServiceRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterServiceRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterServiceRecordResponse proto.InternalMessageInfo

func (m *MsgRegisterServiceRecordResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *MsgRegisterServiceRecordResponse) GetGroupAddress() string {
	if m != nil {
		return m.GroupAddress
	}
	return ""
}

type MsgUpdateServiceRecord struct {
	Controller string         `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Record     *ServiceRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (m *MsgUpdateServiceRecord) Reset()         { *m = MsgUpdateServiceRecord{} }
func (m *MsgUpdateServiceRecord) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateServiceRecord) ProtoMessage()    {}
func (*MsgUpdateServiceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{2}
}
func (m *MsgUpdateServiceRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateServiceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateServiceRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateServiceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateServiceRecord.Merge(m, src)
}
func (m *MsgUpdateServiceRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateServiceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateServiceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateServiceRecord proto.InternalMessageInfo

func (m *MsgUpdateServiceRecord) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgUpdateServiceRecord) GetRecord() *ServiceRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type MsgUpdateServiceRecordResponse struct {
}

func (m *MsgUpdateServiceRecordResponse) Reset()         { *m = MsgUpdateServiceRecordResponse{} }
func (m *MsgUpdateServiceRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateServiceRecordResponse) ProtoMessage()    {}
func (*MsgUpdateServiceRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{3}
}
func (m *MsgUpdateServiceRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateServiceRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateServiceRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateServiceRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateServiceRecordResponse.Merge(m, src)
}
func (m *MsgUpdateServiceRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateServiceRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateServiceRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateServiceRecordResponse proto.InternalMessageInfo

type MsgBurnServiceRecord struct {
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgBurnServiceRecord) Reset()         { *m = MsgBurnServiceRecord{} }
func (m *MsgBurnServiceRecord) String() string { return proto.CompactTextString(m) }
func (*MsgBurnServiceRecord) ProtoMessage()    {}
func (*MsgBurnServiceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{4}
}
func (m *MsgBurnServiceRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBurnServiceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBurnServiceRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBurnServiceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBurnServiceRecord.Merge(m, src)
}
func (m *MsgBurnServiceRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgBurnServiceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBurnServiceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBurnServiceRecord proto.InternalMessageInfo

func (m *MsgBurnServiceRecord) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *MsgBurnServiceRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgBurnServiceRecordResponse struct {
}

func (m *MsgBurnServiceRecordResponse) Reset()         { *m = MsgBurnServiceRecordResponse{} }
func (m *MsgBurnServiceRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBurnServiceRecordResponse) ProtoMessage()    {}
func (*MsgBurnServiceRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{5}
}
func (m *MsgBurnServiceRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBurnServiceRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBurnServiceRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBurnServiceRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBurnServiceRecordResponse.Merge(m, src)
}
func (m *MsgBurnServiceRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBurnServiceRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBurnServiceRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBurnServiceRecordResponse proto.InternalMessageInfo

type MsgRegisterUserEntity struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgRegisterUserEntity) Reset()         { *m = MsgRegisterUserEntity{} }
func (m *MsgRegisterUserEntity) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterUserEntity) ProtoMessage()    {}
func (*MsgRegisterUserEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{6}
}
func (m *MsgRegisterUserEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterUserEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterUserEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterUserEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterUserEntity.Merge(m, src)
}
func (m *MsgRegisterUserEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterUserEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterUserEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterUserEntity proto.InternalMessageInfo

func (m *MsgRegisterUserEntity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgRegisterUserEntityResponse struct {
	DesiredAlias  string `protobuf:"bytes,1,opt,name=desired_alias,json=desiredAlias,proto3" json:"desired_alias,omitempty"`
	ServiceOrigin string `protobuf:"bytes,2,opt,name=service_origin,json=serviceOrigin,proto3" json:"service_origin,omitempty"`
	UcwId         uint64 `protobuf:"varint,3,opt,name=ucw_id,json=ucwId,proto3" json:"ucw_id,omitempty"`
	Attestation   string `protobuf:"bytes,4,opt,name=attestation,proto3" json:"attestation,omitempty"`
}

func (m *MsgRegisterUserEntityResponse) Reset()         { *m = MsgRegisterUserEntityResponse{} }
func (m *MsgRegisterUserEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterUserEntityResponse) ProtoMessage()    {}
func (*MsgRegisterUserEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{7}
}
func (m *MsgRegisterUserEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterUserEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterUserEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterUserEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterUserEntityResponse.Merge(m, src)
}
func (m *MsgRegisterUserEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterUserEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterUserEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterUserEntityResponse proto.InternalMessageInfo

func (m *MsgRegisterUserEntityResponse) GetDesiredAlias() string {
	if m != nil {
		return m.DesiredAlias
	}
	return ""
}

func (m *MsgRegisterUserEntityResponse) GetServiceOrigin() string {
	if m != nil {
		return m.ServiceOrigin
	}
	return ""
}

func (m *MsgRegisterUserEntityResponse) GetUcwId() uint64 {
	if m != nil {
		return m.UcwId
	}
	return 0
}

func (m *MsgRegisterUserEntityResponse) GetAttestation() string {
	if m != nil {
		return m.Attestation
	}
	return ""
}

type MsgAuthenticateUserEntity struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgAuthenticateUserEntity) Reset()         { *m = MsgAuthenticateUserEntity{} }
func (m *MsgAuthenticateUserEntity) String() string { return proto.CompactTextString(m) }
func (*MsgAuthenticateUserEntity) ProtoMessage()    {}
func (*MsgAuthenticateUserEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{8}
}
func (m *MsgAuthenticateUserEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthenticateUserEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthenticateUserEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthenticateUserEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthenticateUserEntity.Merge(m, src)
}
func (m *MsgAuthenticateUserEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthenticateUserEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthenticateUserEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthenticateUserEntity proto.InternalMessageInfo

func (m *MsgAuthenticateUserEntity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgAuthenticateUserEntityResponse struct {
}

func (m *MsgAuthenticateUserEntityResponse) Reset()         { *m = MsgAuthenticateUserEntityResponse{} }
func (m *MsgAuthenticateUserEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAuthenticateUserEntityResponse) ProtoMessage()    {}
func (*MsgAuthenticateUserEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_376dd44ebb86aa2f, []int{9}
}
func (m *MsgAuthenticateUserEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthenticateUserEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthenticateUserEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthenticateUserEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthenticateUserEntityResponse.Merge(m, src)
}
func (m *MsgAuthenticateUserEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthenticateUserEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthenticateUserEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthenticateUserEntityResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterServiceRecord)(nil), "sonrhq.core.service.MsgRegisterServiceRecord")
	proto.RegisterType((*MsgRegisterServiceRecordResponse)(nil), "sonrhq.core.service.MsgRegisterServiceRecordResponse")
	proto.RegisterType((*MsgUpdateServiceRecord)(nil), "sonrhq.core.service.MsgUpdateServiceRecord")
	proto.RegisterType((*MsgUpdateServiceRecordResponse)(nil), "sonrhq.core.service.MsgUpdateServiceRecordResponse")
	proto.RegisterType((*MsgBurnServiceRecord)(nil), "sonrhq.core.service.MsgBurnServiceRecord")
	proto.RegisterType((*MsgBurnServiceRecordResponse)(nil), "sonrhq.core.service.MsgBurnServiceRecordResponse")
	proto.RegisterType((*MsgRegisterUserEntity)(nil), "sonrhq.core.service.MsgRegisterUserEntity")
	proto.RegisterType((*MsgRegisterUserEntityResponse)(nil), "sonrhq.core.service.MsgRegisterUserEntityResponse")
	proto.RegisterType((*MsgAuthenticateUserEntity)(nil), "sonrhq.core.service.MsgAuthenticateUserEntity")
	proto.RegisterType((*MsgAuthenticateUserEntityResponse)(nil), "sonrhq.core.service.MsgAuthenticateUserEntityResponse")
}

func init() { proto.RegisterFile("core/service/tx.proto", fileDescriptor_376dd44ebb86aa2f) }

var fileDescriptor_376dd44ebb86aa2f = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x6b, 0x37, 0x04, 0x3a, 0x6d, 0x22, 0xb1, 0x25, 0x95, 0x6b, 0x81, 0x65, 0x1c, 0x81,
	0x02, 0x08, 0x47, 0x4d, 0x55, 0x0e, 0x9c, 0x48, 0x25, 0x90, 0x38, 0x58, 0x48, 0x46, 0x15, 0x12,
	0x97, 0xc8, 0xf5, 0xae, 0x9c, 0x55, 0x83, 0xd7, 0xdd, 0x5d, 0x37, 0xed, 0x01, 0x89, 0x47, 0xe0,
	0x21, 0x78, 0x18, 0x8e, 0x3d, 0x72, 0x44, 0xc9, 0x89, 0xb7, 0x40, 0xf5, 0xbf, 0xa6, 0xea, 0x5a,
	0x24, 0x17, 0x8e, 0xf9, 0xf6, 0x37, 0xdf, 0xb7, 0x33, 0x19, 0x2f, 0x74, 0x42, 0xc6, 0x49, 0x5f,
	0x10, 0x7e, 0x46, 0x43, 0xd2, 0x97, 0xe7, 0x6e, 0xc2, 0x99, 0x64, 0x68, 0x5b, 0xb0, 0x98, 0x8f,
	0x4f, 0xdd, 0xab, 0x53, 0xb7, 0x38, 0x35, 0x77, 0x6f, 0xb0, 0x9c, 0x84, 0x8c, 0xe3, 0x9c, 0x77,
	0xce, 0xc0, 0xf0, 0x44, 0xe4, 0x93, 0x88, 0x0a, 0x49, 0xf8, 0xc7, 0x1c, 0xf1, 0x33, 0x02, 0x59,
	0x00, 0x21, 0x8b, 0x25, 0x67, 0x93, 0x09, 0xe1, 0x86, 0x66, 0x6b, 0xbd, 0x0d, 0x7f, 0x41, 0x41,
	0xaf, 0xa1, 0x99, 0x7b, 0x19, 0xba, 0xad, 0xf5, 0x36, 0x07, 0x8e, 0xab, 0x08, 0x77, 0x6f, 0x78,
	0xfa, 0x45, 0x85, 0xf3, 0x09, 0xec, 0xba, 0x5c, 0x9f, 0x88, 0x84, 0xc5, 0x82, 0xa0, 0x36, 0xe8,
	0xec, 0x24, 0xcb, 0xbd, 0xe7, 0xeb, 0xec, 0x04, 0x75, 0xa1, 0x15, 0x71, 0x96, 0x26, 0xa3, 0x00,
	0x63, 0x4e, 0x84, 0xc8, 0x62, 0x37, 0xfc, 0xad, 0x4c, 0x1c, 0xe6, 0x9a, 0x23, 0x61, 0xc7, 0x13,
	0xd1, 0x51, 0x82, 0x03, 0x49, 0xfe, 0x5f, 0x3b, 0x36, 0x58, 0xea, 0xd4, 0xb2, 0x19, 0xe7, 0x1d,
	0x3c, 0xf0, 0x44, 0x74, 0x98, 0xf2, 0x78, 0xb5, 0x5b, 0xb5, 0x41, 0xa7, 0xb8, 0xe8, 0x54, 0xa7,
	0xd8, 0xb1, 0xe0, 0xa1, 0xca, 0xa7, 0xca, 0xd9, 0x83, 0xce, 0xc2, 0x60, 0x8f, 0x04, 0xe1, 0x6f,
	0x63, 0x49, 0xe5, 0x05, 0x32, 0xe0, 0x6e, 0xc8, 0x49, 0x20, 0x59, 0x99, 0x52, 0xfe, 0x74, 0x7e,
	0x68, 0xf0, 0x48, 0x59, 0x53, 0xfd, 0x13, 0x5d, 0x68, 0x61, 0x22, 0x28, 0x27, 0x78, 0x14, 0x4c,
	0x68, 0x20, 0x0a, 0x87, 0xad, 0x42, 0x1c, 0x5e, 0x69, 0xe8, 0x09, 0xb4, 0x8b, 0x21, 0x8d, 0x18,
	0xa7, 0x11, 0x8d, 0x8b, 0x5b, 0xb7, 0x0a, 0xf5, 0x43, 0x26, 0xa2, 0x0e, 0x34, 0xd3, 0x70, 0x3a,
	0xa2, 0xd8, 0x58, 0xb7, 0xb5, 0x5e, 0xc3, 0xbf, 0x93, 0x86, 0xd3, 0xf7, 0x18, 0xd9, 0xb0, 0x19,
	0x48, 0x49, 0x84, 0x0c, 0x24, 0x65, 0xb1, 0xd1, 0xc8, 0x4a, 0x17, 0x25, 0xe7, 0x00, 0x76, 0x3d,
	0x11, 0x0d, 0x53, 0x39, 0x26, 0xb1, 0xa4, 0x61, 0x20, 0xc9, 0x52, 0xdd, 0x75, 0xe1, 0x71, 0x6d,
	0x59, 0xd9, 0xe0, 0xe0, 0x4f, 0x03, 0xd6, 0x3d, 0x11, 0xa1, 0xaf, 0xd0, 0x51, 0x7f, 0x0b, 0x2f,
	0x95, 0xcb, 0x50, 0xb7, 0xc2, 0xe6, 0xc1, 0x4a, 0x78, 0x35, 0xe7, 0x29, 0x6c, 0xab, 0x36, 0xf7,
	0x45, 0x9d, 0x9b, 0x02, 0x36, 0xf7, 0x57, 0x80, 0xab, 0xe0, 0x53, 0xb8, 0x7f, 0x7b, 0x35, 0x9f,
	0xd5, 0x39, 0xdd, 0x42, 0xcd, 0xbd, 0xa5, 0xd1, 0x2a, 0x52, 0x02, 0x52, 0x6c, 0xe9, 0xf3, 0x7f,
	0x0d, 0xee, 0x9a, 0x35, 0x07, 0xcb, 0xb3, 0x55, 0xea, 0x37, 0x0d, 0x76, 0x6a, 0x56, 0xc8, 0xad,
	0xb3, 0x53, 0xf3, 0xe6, 0xab, 0xd5, 0xf8, 0xf2, 0x0a, 0x87, 0x6f, 0x7e, 0xce, 0x2c, 0xed, 0x72,
	0x66, 0x69, 0xbf, 0x67, 0x96, 0xf6, 0x7d, 0x6e, 0xad, 0x5d, 0xce, 0xad, 0xb5, 0x5f, 0x73, 0x6b,
	0xed, 0xf3, 0xd3, 0x88, 0xca, 0x71, 0x7a, 0xec, 0x86, 0xec, 0x4b, 0x3f, 0xf7, 0xee, 0x67, 0x2f,
	0xf7, 0xf9, 0xf5, 0x3b, 0x7f, 0x91, 0x10, 0x71, 0xdc, 0xcc, 0xde, 0xee, 0xfd, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x82, 0x95, 0x85, 0xa6, 0x04, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterServiceRecord(ctx context.Context, in *MsgRegisterServiceRecord, opts ...grpc.CallOption) (*MsgRegisterServiceRecordResponse, error)
	UpdateServiceRecord(ctx context.Context, in *MsgUpdateServiceRecord, opts ...grpc.CallOption) (*MsgUpdateServiceRecordResponse, error)
	BurnServiceRecord(ctx context.Context, in *MsgBurnServiceRecord, opts ...grpc.CallOption) (*MsgBurnServiceRecordResponse, error)
	RegisterUserEntity(ctx context.Context, in *MsgRegisterUserEntity, opts ...grpc.CallOption) (*MsgRegisterUserEntityResponse, error)
	AuthenticateUserEntity(ctx context.Context, in *MsgAuthenticateUserEntity, opts ...grpc.CallOption) (*MsgAuthenticateUserEntityResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterServiceRecord(ctx context.Context, in *MsgRegisterServiceRecord, opts ...grpc.CallOption) (*MsgRegisterServiceRecordResponse, error) {
	out := new(MsgRegisterServiceRecordResponse)
	err := c.cc.Invoke(ctx, "/sonrhq.core.service.Msg/RegisterServiceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateServiceRecord(ctx context.Context, in *MsgUpdateServiceRecord, opts ...grpc.CallOption) (*MsgUpdateServiceRecordResponse, error) {
	out := new(MsgUpdateServiceRecordResponse)
	err := c.cc.Invoke(ctx, "/sonrhq.core.service.Msg/UpdateServiceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BurnServiceRecord(ctx context.Context, in *MsgBurnServiceRecord, opts ...grpc.CallOption) (*MsgBurnServiceRecordResponse, error) {
	out := new(MsgBurnServiceRecordResponse)
	err := c.cc.Invoke(ctx, "/sonrhq.core.service.Msg/BurnServiceRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterUserEntity(ctx context.Context, in *MsgRegisterUserEntity, opts ...grpc.CallOption) (*MsgRegisterUserEntityResponse, error) {
	out := new(MsgRegisterUserEntityResponse)
	err := c.cc.Invoke(ctx, "/sonrhq.core.service.Msg/RegisterUserEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AuthenticateUserEntity(ctx context.Context, in *MsgAuthenticateUserEntity, opts ...grpc.CallOption) (*MsgAuthenticateUserEntityResponse, error) {
	out := new(MsgAuthenticateUserEntityResponse)
	err := c.cc.Invoke(ctx, "/sonrhq.core.service.Msg/AuthenticateUserEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterServiceRecord(context.Context, *MsgRegisterServiceRecord) (*MsgRegisterServiceRecordResponse, error)
	UpdateServiceRecord(context.Context, *MsgUpdateServiceRecord) (*MsgUpdateServiceRecordResponse, error)
	BurnServiceRecord(context.Context, *MsgBurnServiceRecord) (*MsgBurnServiceRecordResponse, error)
	RegisterUserEntity(context.Context, *MsgRegisterUserEntity) (*MsgRegisterUserEntityResponse, error)
	AuthenticateUserEntity(context.Context, *MsgAuthenticateUserEntity) (*MsgAuthenticateUserEntityResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterServiceRecord(ctx context.Context, req *MsgRegisterServiceRecord) (*MsgRegisterServiceRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterServiceRecord not implemented")
}
func (*UnimplementedMsgServer) UpdateServiceRecord(ctx context.Context, req *MsgUpdateServiceRecord) (*MsgUpdateServiceRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceRecord not implemented")
}
func (*UnimplementedMsgServer) BurnServiceRecord(ctx context.Context, req *MsgBurnServiceRecord) (*MsgBurnServiceRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BurnServiceRecord not implemented")
}
func (*UnimplementedMsgServer) RegisterUserEntity(ctx context.Context, req *MsgRegisterUserEntity) (*MsgRegisterUserEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUserEntity not implemented")
}
func (*UnimplementedMsgServer) AuthenticateUserEntity(ctx context.Context, req *MsgAuthenticateUserEntity) (*MsgAuthenticateUserEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthenticateUserEntity not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterServiceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterServiceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterServiceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrhq.core.service.Msg/RegisterServiceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterServiceRecord(ctx, req.(*MsgRegisterServiceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateServiceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateServiceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateServiceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrhq.core.service.Msg/UpdateServiceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateServiceRecord(ctx, req.(*MsgUpdateServiceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BurnServiceRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBurnServiceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BurnServiceRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrhq.core.service.Msg/BurnServiceRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BurnServiceRecord(ctx, req.(*MsgBurnServiceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterUserEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterUserEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterUserEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrhq.core.service.Msg/RegisterUserEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterUserEntity(ctx, req.(*MsgRegisterUserEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AuthenticateUserEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAuthenticateUserEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AuthenticateUserEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrhq.core.service.Msg/AuthenticateUserEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AuthenticateUserEntity(ctx, req.(*MsgAuthenticateUserEntity))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sonrhq.core.service.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterServiceRecord",
			Handler:    _Msg_RegisterServiceRecord_Handler,
		},
		{
			MethodName: "UpdateServiceRecord",
			Handler:    _Msg_UpdateServiceRecord_Handler,
		},
		{
			MethodName: "BurnServiceRecord",
			Handler:    _Msg_BurnServiceRecord_Handler,
		},
		{
			MethodName: "RegisterUserEntity",
			Handler:    _Msg_RegisterUserEntity_Handler,
		},
		{
			MethodName: "AuthenticateUserEntity",
			Handler:    _Msg_AuthenticateUserEntity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core/service/tx.proto",
}

func (m *MsgRegisterServiceRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterServiceRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterServiceRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Record != nil {
		{
			size, err := m.Record.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterServiceRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterServiceRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterServiceRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GroupAddress) > 0 {
		i -= len(m.GroupAddress)
		copy(dAtA[i:], m.GroupAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GroupAddress)))
		i--
		dAtA[i] = 0x12
	}
	if m.Ok {
		i--
		if m.Ok {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateServiceRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateServiceRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateServiceRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Record != nil {
		{
			size, err := m.Record.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateServiceRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateServiceRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateServiceRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBurnServiceRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBurnServiceRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBurnServiceRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBurnServiceRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBurnServiceRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBurnServiceRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterUserEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterUserEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterUserEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterUserEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterUserEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterUserEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attestation) > 0 {
		i -= len(m.Attestation)
		copy(dAtA[i:], m.Attestation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Attestation)))
		i--
		dAtA[i] = 0x22
	}
	if m.UcwId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UcwId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ServiceOrigin) > 0 {
		i -= len(m.ServiceOrigin)
		copy(dAtA[i:], m.ServiceOrigin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ServiceOrigin)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DesiredAlias) > 0 {
		i -= len(m.DesiredAlias)
		copy(dAtA[i:], m.DesiredAlias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DesiredAlias)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAuthenticateUserEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthenticateUserEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthenticateUserEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAuthenticateUserEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthenticateUserEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthenticateUserEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterServiceRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Record != nil {
		l = m.Record.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterServiceRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ok {
		n += 2
	}
	l = len(m.GroupAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateServiceRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Record != nil {
		l = m.Record.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateServiceRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBurnServiceRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBurnServiceRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterUserEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterUserEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DesiredAlias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ServiceOrigin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.UcwId != 0 {
		n += 1 + sovTx(uint64(m.UcwId))
	}
	l = len(m.Attestation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAuthenticateUserEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAuthenticateUserEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterServiceRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterServiceRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterServiceRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Record", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Record == nil {
				m.Record = &ServiceRecord{}
			}
			if err := m.Record.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterServiceRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterServiceRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterServiceRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ok", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Ok = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GroupAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateServiceRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateServiceRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateServiceRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Record", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Record == nil {
				m.Record = &ServiceRecord{}
			}
			if err := m.Record.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateServiceRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateServiceRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateServiceRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBurnServiceRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBurnServiceRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBurnServiceRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBurnServiceRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBurnServiceRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBurnServiceRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterUserEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterUserEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterUserEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterUserEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterUserEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterUserEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DesiredAlias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DesiredAlias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UcwId", wireType)
			}
			m.UcwId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UcwId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attestation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attestation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAuthenticateUserEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthenticateUserEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthenticateUserEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAuthenticateUserEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthenticateUserEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthenticateUserEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
